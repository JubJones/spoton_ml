mlflow:
  experiment_name: "MTMMC Detection Training (FasterRCNN)"

environment:
  device: "auto" # Options: "auto", "cuda:0", "mps", "cpu"
  seed: 42

data:
  # base_path: "/Volumes/HDD/MTMMC"
  base_path: "D:/MTMMC" # Adjust to your dataset location
  # Define scenes and cameras to USE for this entire comparison run
  # The dataset loader will combine data from these sources.
  scenes_to_include:
    - scene_id: "s10" # Factory
      camera_ids: ["c09", "c12", "c13", "c16"] # Use all cameras from the scene
    - scene_id: "s47" # Campus
      camera_ids: ["c01", "c02", "c03", "c05"] # Use all cameras from the scene

  # Data subsetting for faster runs/debugging
  use_data_subset: true # Set to false to use all data
  data_subset_fraction: 0.1
  # Use 10% of the data if use_data_subset is true

  # Train/Val split
  val_split_ratio: 0.2 # Proportion of (sub)set to use for validation
  num_workers: 2 # Number of workers for DataLoader

# --- Models to Train (Child Runs) ---
models_to_train:
  # --- Faster R-CNN Configuration ---
  - model:
      type: "fasterrcnn"
      name_tag: "FasterRCNN_Default" # Used for run naming if run_name isn't specified below
      backbone_weights: "FasterRCNN_ResNet50_FPN_Weights.DEFAULT"
      num_classes: 2 # person + background
      trainable_backbone_layers: 3

    training:
      engine: "pytorch"
      epochs: 5
      batch_size: 2
      learning_rate: 0.001
      optimizer: "AdamW"
      weight_decay: 0.005
      # --- Added Gradient Clipping ---
      gradient_clip_norm: 1.0 # Max norm value for clipping (can be tuned)
      # -----------------------------
      lr_scheduler: "StepLR" # Explicitly specify scheduler if needed
      lr_scheduler_step_size: 3
      lr_scheduler_gamma: 0.1
      checkpoint_dir: "checkpoints"
      save_best_metric: "val_map_50"